import { Dialog, Transition } from "@headlessui/react";
import { Fragment, useState } from "react";
import Button from "../CommonUI/Button";
import ListRealEstateWithPool from "./ListRealEstateWithPool";

type Props = {
  setSelectedPoolId: (poolId: string) => void;
};

const StakingModel: React.FC<Props> = ({ setSelectedPoolId }) => {
  const [isOpen, setIsOpen] = useState(false);

  const openModal = () => {
    setIsOpen(true);
  };

  const closeModal = () => {
    setIsOpen(false);
  };

  return (
    <>
      <div>
        <Button
          className="!rounded-md !pt-1.5 !pb-1 !flex-col w-24 items-center justify-center flex !font-normal !text-sm"
          onClick={openModal}
        >
          <svg
            width="16"
            height="20"
            viewBox="0 0 16 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M7.68554 19.487H7.67619L7.66684 19.4873C4.50011 19.6058 2.71294 18.7795 1.7274 17.984C1.2304 17.5829 0.92405 17.1792 0.743965 16.8833C0.653804 16.7352 0.595232 16.6139 0.560379 16.5335C0.549764 16.5091 0.541362 16.4884 0.534952 16.472C0.300969 13.1303 1.27928 11.0363 2.33497 9.75826C3.30342 8.58581 4.36451 8.06752 4.70689 7.92041H11.1753C11.5177 8.06753 12.5793 8.58593 13.5504 9.75872C14.6086 11.0368 15.5918 13.1302 15.3694 16.4698C15.3629 16.4859 15.3545 16.5058 15.3441 16.5291C15.3082 16.6098 15.2481 16.7314 15.1561 16.88C14.9723 17.1767 14.6612 17.5812 14.1602 17.983C13.1666 18.7799 11.3757 19.6058 8.22655 19.4873L8.21716 19.487H8.20776H7.9522H7.68554ZM7.44147 11.545C7.44523 11.5384 7.44823 11.5335 7.45016 11.5304C7.61852 11.3085 7.97179 11.2418 8.51016 11.3601C8.75436 11.4138 8.98436 11.4957 9.15604 11.5661C9.24097 11.601 9.30947 11.6321 9.35575 11.654C9.37884 11.6649 9.39627 11.6735 9.4073 11.679L9.41891 11.6849L9.42029 11.6856L9.42051 11.6857L9.42069 11.6858L9.42091 11.6859L9.42093 11.6859L9.93854 11.9569L10.1259 11.4027L10.3925 10.6138L10.4819 10.3494L10.3037 10.1346C10.1298 9.92479 9.88945 9.80044 9.6852 9.7229C9.47316 9.6424 9.24729 9.59289 9.05071 9.5614C8.96602 9.54784 8.88413 9.53722 8.80776 9.52889V8.75373V8.25373H8.30776H7.48554H6.98554V8.75373V9.50434C6.53468 9.68476 6.12946 9.96684 5.80254 10.3306L5.79419 10.3399L5.78632 10.3496C5.50373 10.6976 5.32083 11.1157 5.25709 11.5594C5.19383 11.9998 5.25033 12.449 5.42057 12.86C5.55904 13.2252 5.82922 13.5056 6.10335 13.7146C6.38377 13.9285 6.70485 14.0955 6.99603 14.222C7.28954 14.3495 7.56804 14.4424 7.77207 14.5034C7.87459 14.5341 7.95957 14.557 8.01981 14.5725C8.04996 14.5802 8.074 14.5861 8.09104 14.5902L8.09784 14.5918C8.24052 14.6383 8.36683 14.7251 8.46141 14.8418C8.55903 14.9623 8.61839 15.1093 8.63186 15.2638L8.63185 15.2638L8.63219 15.2674C8.64269 15.3786 8.62979 15.4907 8.59432 15.5966C8.55884 15.7026 8.50158 15.7999 8.42622 15.8823C8.35086 15.9648 8.25907 16.0305 8.15677 16.0753C8.05873 16.1183 7.95311 16.1411 7.84619 16.1425C7.26943 16.102 6.70707 15.9435 6.194 15.6767L5.68879 15.414L5.49362 15.949L5.19362 16.7712L5.04522 17.1779L5.42657 17.3829C5.90717 17.6413 6.42067 17.8315 6.95221 17.9484V18.6425V19.1425H7.45221H8.27442H8.77442V18.6425V17.975C8.92533 17.9418 9.07312 17.8943 9.2157 17.8329C9.51138 17.7055 9.77884 17.5206 10.0026 17.2891C10.2263 17.0576 10.4019 16.7839 10.5191 16.4841C10.6261 16.2102 10.6825 15.9195 10.6859 15.6259C10.7777 15.2735 10.7542 14.7286 10.47 14.1867C10.1452 13.5676 9.4988 12.9804 8.36609 12.6314C7.44345 12.3471 7.36737 11.9991 7.35683 11.8903C7.34817 11.8008 7.36892 11.7094 7.40035 11.6308C7.41538 11.5932 7.43088 11.5635 7.44147 11.545ZM7.45226 11.5271L7.4519 11.5277C7.45264 11.5265 7.45279 11.5263 7.45226 11.5271Z"
              fill="white"
              stroke="white"
            />
            <path
              d="M4.40781 4.87609H11.4411C11.4411 4.87609 15.541 2.32056 13.4522 0.331686C13.074 0.230543 12.6748 0.240695 12.3022 0.360922C11.9297 0.481149 11.5999 0.70634 11.3522 1.00946C11.3522 1.00946 10.6078 2.60945 9.72999 1.50945C9.72999 1.50945 8.26333 -1.52385 5.13003 1.00946C5.13003 1.00946 4.63003 2.12056 3.91892 1.93167C3.91892 1.93167 1.78561 1.1539 1.95227 2.65389C1.89672 2.65389 2.01894 3.99832 4.40781 4.87609Z"
              fill="white"
            />
          </svg>
          <span className="whitespace-nowrap mt-0.5">Staking</span>
        </Button>
      </div>
      <Transition
        enter="transition-opacity duration-300"
        enterFrom="opacity-0"
        enterTo="opacity-100"
        leave="transition-opacity duration-300"
        leaveFrom="opacity-100"
        leaveTo="opacity-0"
        show={isOpen}
        as={Fragment}
      >
        <div className="fixed inset-0 flex items-center justify-center bg-black/70">
          <div className="w-full max-w-[90%] lg:max-w-[900px] xl:max-w-[1200px] h-full max-h-[90%]">
            <ListRealEstateWithPool
              setSelectedPoolId={setSelectedPoolId}
              handleClose={closeModal}
            />
          </div>
        </div>
      </Transition>
    </>
  );
};

export default StakingModel;
